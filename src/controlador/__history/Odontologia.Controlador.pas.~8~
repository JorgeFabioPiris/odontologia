unit Odontologia.Controlador;

interface

uses
  Odontologia.Controlador.Interfaces,
  Odontologia.Controller.Pais,
  Odontologia.Controller.Pais.Interfaces,
  Odontologia.Controlador.Producto,
  Odontologia.Controlador.Producto.Interfaces,
  Odontologia.Controlador.Pedido.Interfaces;

type
  TController = class(TInterfacedObject, iController)

  private

  public
    constructor Create;
    destructor Destroy; override;
    class function New: iController;
    function Producto: iControllerProducto;
    function Pais: iControllerPais;
    function pedido : icontrollerpedido;
     function pedidoItem : icontrollerpedidoitem;
  end;

implementation

uses
  Odontologia.Controlador.Pedido, Odontologia.Controlador.PedidoItem;

{ TController }

constructor TController.Create;
begin

end;

destructor TController.Destroy;
begin

  inherited;
end;

class function TController.New: iController;
begin
  Result := Self.Create;
end;

function TController.Pais: iControllerPais;
begin
  Result := TControllerPais.New;
end;

function TController.pedido: icontrollerpedido;
begin
  Result := tcontrollerpedido.new;
end;

function TController.pedidoItem: icontrollerpedidoitem;
begin
  Result := tcontrollerpedidoItem.new;
end;

function TController.Producto: iControllerProducto;
begin
  Result := TControllerProducto.New;
end;

end.
