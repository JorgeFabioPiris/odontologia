unit SimplePed.Controller.Producto;

interface

uses
  SimplePed.Controller.Producto.Interfaces, SimplePed.Model.Entidades.Producto,
  Data.DB, SimplePed.Model.Producto.Interfaces, System.Generics.Collections;

type
  TControllerProducto = class (TInterfacedObject, iControllerProducto)
    private
      FModel : iModelProducto;
      FDataSource : TDataSource;
      Flista : TObjectList<TPRODUCTO>;

    public
      constructor Create;
      destructor Destroy; override;
      class function New : iControllerProducto;
      function DataSource (aDataSource : TDataSource) : iControllerProducto;
      function Buscar  : iControllerProducto;
      function Insertar  : iControllerProducto;
      function Modificar  : iControllerProducto;
      function Eliminar  : iControllerProducto;
      function Entidad : TPRODUCTO;
  end;

implementation

{ TControllerProducto }

function TControllerProducto.Buscar: iControllerProducto;
begin
  Result := Self;
  if Assigned(Flista) then
    Flista.Free;

  Flista := FModel.DAO.Find;
end;

constructor TControllerProducto.Create;
begin
  FModel := TModel.New.Producto;
end;

function TControllerProducto.DataSource(
  aDataSource: TDataSource): iControllerProducto;
begin
   Result := Self;
   FDataSource := aDataSource;
   FModel.DataSource(FDataSource);
end;

destructor TControllerProducto.Destroy;
begin
  if Assigned(Flista) then
    Flista.Free;
  inherited;
end;

function TControllerProducto.Eliminar: iControllerProducto;
begin

end;

function TControllerProducto.Entidad: TPRODUCTO;
begin

end;

function TControllerProducto.Insertar: iControllerProducto;
begin

end;

function TControllerProducto.Modificar: iControllerProducto;
begin

end;

class function TControllerProducto.New: iControllerProducto;
begin
  Result := Self.Create;
end;

end.
