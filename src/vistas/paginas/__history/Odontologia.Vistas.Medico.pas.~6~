unit Odontologia.Vistas.Medico;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Odontologia.Vistas.Template, Data.DB,
  System.ImageList, Vcl.ImgList, Vcl.StdCtrls, Vcl.Buttons, Vcl.Grids,
  Vcl.DBGrids, Vcl.WinXPanels, Vcl.ExtCtrls, Vcl.DBCtrls,
  Odontologia.Controlador.Interfaces,
  Odontologia.Controlador.Medico.Interfaces,
  Odontologia.Controlador;

type
  TPagMedico = class(TPagTemplate)
    lblCodigo: TLabel;
    lblNombre: TLabel;
    lblDocumento: TLabel;
    lblMatricula: TLabel;
    lblEspecialidad: TLabel;
    lblEstado: TLabel;
    edtCodigo: TEdit;
    edtNombre: TEdit;
    edtDocumento: TEdit;
    edtMatricula: TEdit;
    edtEspecialidad: TEdit;
    cmbEstado: TDBLookupComboBox;

    procedure FormCreate(Sender: TObject);
    procedure btnNuevoClick(Sender: TObject);
    procedure btnActualizarClick(Sender: TObject);
    procedure btnBorrarClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure btnGuardarClick(Sender: TObject);
  private
    { Private declarations }
    FController : iController;
    FMedico     : iControllerMedico;
    procedure prc_estado_inicial;
  public
    { Public declarations }
  end;

var
  PagMedico: TPagMedico;
  Insercion: Boolean;

implementation

{$R *.dfm}

procedure TPagMedico.btnActualizarClick(Sender: TObject);
begin
  inherited;
  FMedico.Buscar();
end;

procedure TPagMedico.btnBorrarClick(Sender: TObject);
var
  ShouldClose: Boolean;
begin
  inherited;
  if MessageDlg('Realmente desea eliminar este registro?', mtConfirmation, [mbYes, mbNo], 0) = mrYes then
  begin
    FMedico.Entidad.ID := StrToInt(edtCodigo.Text);
    FMedico.Eliminar;
    FMedico.Buscar;
    prc_estado_inicial;
  end else
  begin
    edtNombre.SetFocus;
  end;
  end;

procedure TPagMedico.btnCancelarClick(Sender: TObject);
begin
  inherited;
  prc_estado_inicial;
end;

procedure TPagMedico.btnGuardarClick(Sender: TObject);
begin
  inherited;
    if Insercion then
  begin
    FMedico.Entidad.MED_NOMBRE        := edtNombre.Text;
    FMedico.Entidad.MED_DOCUMENTO     := edtDocumento.Text;
    FMedico.Entidad.MED_MATRICULA     := edtMatricula.Text;
    FMedico.Entidad.MED_ESPECIALIDAD  := edtEspecialidad.Text;
    Fmedico.entidad.MED_COD_ESTADO    := cmbEstado.KeyValue;
    FMedico.Insertar;
  end
  else
  begin
    FMedico.Entidad.MED_CODIGO        := StrToInt(edtCodigo.Text);
    FMedico.Entidad.MED_NOMBRE        := edtNombre.Text;
    FMedico.Entidad.MED_DOCUMENTO     := edtDocumento.Text;
    FMedico.Entidad.MED_MATRICULA     := edtMatricula.Text;
    FMedico.Entidad.MED_ESPECIALIDAD  := edtEspecialidad.Text;
    Fmedico.entidad.MED_COD_ESTADO    := cmbEstado.KeyValue;
    FMedico.Modificar;
  end;
  prc_estado_inicial;
end;

procedure TPagMedico.btnNuevoClick(Sender: TObject);
begin
  inherited;
CardPanel1.ActiveCard := Card2;
  lblTitulo2.Caption := 'Agregar nuevo registro';
  edtCodigo.Enabled := false;
  edtNombre.SetFocus;
end;

procedure TPagMedico.FormCreate(Sender: TObject);
begin
  inherited;
  lblTitulo.Caption := 'Registro de medicos';
end;

procedure TPagMedico.prc_estado_inicial;
begin
  Insercion := True;
  CardPanel1.ActiveCard := Card1;
  edtSearch.Text := '';
  edtCodigo.Text := '';
  edtNombre.Text := '';
  edtDocumento.Text := '';
  edtMatricula.Text := '';
  edtEspecialidad.Text := '';
  FMedico.Buscar;
end;

end.
